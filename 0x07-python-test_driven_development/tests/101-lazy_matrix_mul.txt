>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[ 7 10]
 [15 22]]

>>> m_a = [
... [1.2, 5.5, 6.2],
... [4.66, 12.3, -9.2]
... ]
>>> m_b = [
... [5.0, 3.3],
... [-2.9, 4.4],
... [7.2, 4.4]
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
[[ 34.69   55.44 ]
 [-78.61   29.018]]

>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]]))
Traceback (most recent call last):
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

>>> print(lazy_matrix_mul([[1, 2], [3, 4, 6]], [[1, 2], [3, 4, 5]]))
Traceback (most recent call last):
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

>>> print(lazy_matrix_mul([[1, 2, 1], [3, 4, 2]], [[1, 2, 1], [3, 4, 5]]))
Traceback (most recent call last):
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 3)

>>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13 16]]

>>> print(lazy_matrix_mul(1, 2))
Traceback (most recent call last):
ValueError: matmul: Input operand 0 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

>>> print(lazy_matrix_mul([[1, 3, 5]], 2))
Traceback (most recent call last):
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

>>> print(lazy_matrix_mul(1, [[1, 3, 5]]))
Traceback (most recent call last):
ValueError: matmul: Input operand 0 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

>>> print(lazy_matrix_mul([1, 2, 3], [[1, 3, 5]]))
Traceback (most recent call last):
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 3)

>>> print(lazy_matrix_mul([[1, 2, 3]], [1, 3, 5]))
[22]

>>> print(lazy_matrix_mul([[1, 2, 3]], []))
Traceback (most recent call last):
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 0 is different from 3)

>>> print(lazy_matrix_mul([[]], [[1, 2, 3]]))
Traceback (most recent call last):
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 0)

>>> print(lazy_matrix_mul([[1, "a"], [3, 4]], [[1, 2], [3, 4]]))
Traceback (most recent call last):
numpy._core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U21'), dtype('int64')) -> None

>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, "b"], [3, 4]]))
Traceback (most recent call last):
numpy._core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('int64'), dtype('<U21')) -> None

>>> print(lazy_matrix_mul())
Traceback (most recent call last):
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> m_a = [
... [1, 2],
... [3, 4, 5]
... ]
>>> m_b = m_a
>>> print(lazy_matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: setting an array element with a sequence.
