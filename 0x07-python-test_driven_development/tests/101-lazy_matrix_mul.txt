>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[ 7 10]
 [15 22]]

>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]]))
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> print(lazy_matrix_mul([[1, 2], [3, 4, 6]], [[1, 2], [3, 4, 5]]))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> print(lazy_matrix_mul([[1, 2, 1], [3, 4, 2]], [[1, 2, 1], [3, 4, 5]]))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13 16]]

>>> print(lazy_matrix_mul(1, 2))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> print(lazy_matrix_mul([[1, 3, 5]], 2))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> print(lazy_matrix_mul(1, [[1, 3, 5]]))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> print(lazy_matrix_mul([1, 2, 3], [[1, 3, 5]]))
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> print(lazy_matrix_mul([[1, 2, 3]], [1, 3, 5]))
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> print(lazy_matrix_mul([[1, 2, 3]], []))
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> print(lazy_matrix_mul([[]], [[1, 2, 3]]))
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> print(lazy_matrix_mul([[1, "a"], [3, 4]], [[1, 2], [3, 4]]))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, "b"], [3, 4]]))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> print(lazy_matrix_mul())
Traceback (most recent call last):
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
