>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>>

>>> bg.integer_validator("my_int", 12)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'bg' is not defined

>>> bg = BaseGeometry()
>>>

>>> bg.integer_validator("my_int", 12)
>>>

>>> bg.integer_validator("width", 89)
>>>

>>> try:
...     bg.integer_validator("name", "John")
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
...
[TypeError] name must be an integer


>>> try:
...     bg.integer_validator("age", 0)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
...
[ValueError] age must be greater than 0


>>> try:
...     bg.integer_validator("distance", -4)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
...
[ValueError] distance must be greater than 0


>>> bg.integer_validator("my_int",)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'


>>> bg.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator(NULL, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'NULL' is not defined


